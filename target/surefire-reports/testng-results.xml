<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-26T18:14:56 EST" name="regression testing" finished-at="2023-02-26T18:15:26 EST" duration-ms="30426">
    <groups>
    </groups>
    <test started-at="2023-02-26T18:14:56 EST" name="LoginTest" finished-at="2023-02-26T18:15:26 EST" duration-ms="30426">
      <class name="Test.Testfoor">
        <test-method signature="test4()[pri:0, instance:Test.Testfoor@1ffaf86]" started-at="2023-02-26T18:15:26 EST" name="test4" finished-at="2023-02-26T18:15:26 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- Test.Testfoor -->
      <class name="Test.Test2">
        <test-method signature="testtwo()[pri:0, instance:Test.Test2@45099dd3]" started-at="2023-02-26T18:15:18 EST" name="testtwo" finished-at="2023-02-26T18:15:26 EST" duration-ms="8042" status="FAIL">
          <exception class="java.lang.IllegalMonitorStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalMonitorStateException
at java.base/java.lang.Object.wait(Native Method)
at Test.Test2.testtwo(Test2.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalMonitorStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testtwo -->
      </class> <!-- Test.Test2 -->
      <class name="Test.Testthree">
        <test-method signature="Test3()[pri:0, instance:Test.Testthree@13e344d]" started-at="2023-02-26T18:15:26 EST" name="Test3" finished-at="2023-02-26T18:15:26 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
      </class> <!-- Test.Testthree -->
      <class name="Test.LoginTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:Test.LoginTest@12aba8be]" started-at="2023-02-26T18:14:56 EST" name="openApplication" finished-at="2023-02-26T18:15:04 EST" duration-ms="7863" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="Login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Test.LoginTest@12aba8be]" started-at="2023-02-26T18:15:04 EST" name="Login" data-provider="getLoginData" finished-at="2023-02-26T18:15:07 EST" duration-ms="3915" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[walidjacob@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Walid123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Successfull]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="close()[pri:0, instance:Test.LoginTest@12aba8be]" started-at="2023-02-26T18:15:07 EST" name="close" finished-at="2023-02-26T18:15:08 EST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:Test.LoginTest@12aba8be]" started-at="2023-02-26T18:15:08 EST" name="openApplication" finished-at="2023-02-26T18:15:14 EST" duration-ms="6121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="Login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Test.LoginTest@12aba8be]" started-at="2023-02-26T18:15:14 EST" name="Login" data-provider="getLoginData" finished-at="2023-02-26T18:15:18 EST" duration-ms="3975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dummy@test.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dummy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="close()[pri:0, instance:Test.LoginTest@12aba8be]" started-at="2023-02-26T18:15:18 EST" name="close" finished-at="2023-02-26T18:15:18 EST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- Test.LoginTest -->
    </test> <!-- LoginTest -->
  </suite> <!-- regression testing -->
</testng-results>
